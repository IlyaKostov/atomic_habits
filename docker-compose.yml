version: '3'

services:
  redis:
    image: redis
    ports:
      - '6379:6379'

  db:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    env_file:
      - .env

    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: sh -c "sleep 5 && python manage.py migrate"

  app:
    build: .
    tty: true
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
    depends_on:
      migrations:
        condition: service_completed_successfully

  bot:
    build: .
    command: python manage.py bot
    depends_on:
      - app

  celery:
    build: .
    tty: true
    command: celery -A atomic_habits worker -l INFO
    depends_on:
      - app

  celery-beat:
    build: .
    tty: true
    command: celery -A atomic_habits beat -l INFO -S django
    depends_on:
      - app

volumes:
  pg_data:
